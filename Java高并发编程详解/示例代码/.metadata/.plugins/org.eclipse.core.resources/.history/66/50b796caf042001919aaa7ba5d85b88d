package chapter23;

public class CountDownLatch extends Latch{

	
	public CountDownLatch(int limit) {
		super(limit);
	}

	@Override
	public void await() throws InterruptedException {
		synchronized (this) {
			//当limit>0时，当前线程进入阻塞
			while(limit > 0){
				this.wait();
			}
		}
	}

	@Override
	public void countDown() {
		synchronized (this) {
			if(limit<=0){
				throw new IllegalStateException("所有任务已经完成");
			}
			//使limit-1，并通知阻塞线程
			limit--;
			this.notifyAll();
		}
	}

	@Override
	public int getUnarrived() {
		return limit;
	}
	
}
